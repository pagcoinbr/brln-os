# Dockerfile para LND baseado no script BRLN
FROM debian:bookworm-slim

# Argumentos para configuração de usuário via docker-compose
ARG LND_UID=1008
ARG LND_GID=1008

# Variáveis de ambiente
ENV DATA_DIR=/data/lnd
ENV LND_BIN_DATA=/usr/local/bin
ENV USER=lnd

# Instalar dependências básicas
RUN apt-get update && apt-get install -y \
    curl \
    postgresql-client \
    ca-certificates \
    expect \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário LND e grupo tor-access
RUN groupadd -r -g ${LND_GID} lnd && \
    groupadd -f -g 1050 tor-access && \
    useradd -r -g ${LND_GID} -u ${LND_UID} -s /bin/bash -m lnd && \
    usermod -a -G tor-access lnd

# Copiar e extrair binários do LND
COPY lnd-linux-amd64-v0.19.2-beta/lnd ${LND_BIN_DATA}/lnd
COPY lnd-linux-amd64-v0.19.2-beta/lncli ${LND_BIN_DATA}/lncli

# Tornar os binários executáveis
RUN chmod +x ${LND_BIN_DATA}/lnd ${LND_BIN_DATA}/lncli

# Criar diretórios necessários e definir permissões
RUN mkdir -p ${DATA_DIR} \
    && mkdir -p ${DATA_DIR}/chain/bitcoin/mainnet \
    && mkdir -p ${DATA_DIR}/logs \
    && mkdir -p ${DATA_DIR}/tls \
    && chown -R ${LND_UID}:${LND_GID} ${DATA_DIR}

# Definir diretório de trabalho
WORKDIR ${DATA_DIR}

# Declarar volume para persistência de dados
VOLUME ["${DATA_DIR}"]

# Mudar para usuário não-root
USER ${LND_UID}

# Expor portas padrão do LND
EXPOSE 9735 10009 8080

# Health check para verificar se o LND está rodando
HEALTHCHECK --interval=120s --timeout=10s --start-period=5s --retries=3 \
    CMD lncli --network=mainnet --rpcserver=localhost:10009 getinfo || exit 1

ENTRYPOINT [ "lnd" ]
CMD [ "--configfile=/data/lnd/lnd.conf" , "--datadir=/data/lnd" ] 