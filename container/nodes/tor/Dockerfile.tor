# Multi-stage Dockerfile para compilar Tor a partir do código fonte
FROM ubuntu:22.04 as builder

# Variáveis de ambiente
ENV DEBIAN_FRONTEND=noninteractive
ENV TOR_VERSION=0.4.8.17
ENV TOR_URL="https://dist.torproject.org/tor-${TOR_VERSION}.tar.gz"

# Instalar dependências de compilação
RUN apt-get update && apt-get install -y \
    build-essential \
    automake \
    pkg-config \
    libevent-dev \
    libssl-dev \
    zlib1g-dev \
    libzstd-dev \
    liblzma-dev \
    libscrypt-dev \
    wget \
    gnupg \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Baixar o código fonte do Tor
WORKDIR /tmp
RUN wget ${TOR_URL}

# Extrair e compilar Tor
RUN tar -xzf tor-${TOR_VERSION}.tar.gz && \
    cd tor-${TOR_VERSION} && \
    ./configure \
        --prefix=/usr/local \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --disable-systemd \
        --enable-lzma \
        --enable-zstd && \
    make -j$(nproc) && \
    make install DESTDIR=/tmp/tor-install

# Imagem final - mais leve
FROM ubuntu:22.04

# Variáveis de ambiente
ENV DEBIAN_FRONTEND=noninteractive

# Instalar apenas dependências de runtime
RUN apt-get update && apt-get install -y \
    libevent-2.1-7 \
    libssl3 \
    zlib1g \
    libzstd1 \
    liblzma5 \
    libscrypt0 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copiar binários compilados do estágio de build
COPY --from=builder /tmp/tor-install /

# Copiar arquivo de configuração customizado
COPY tor/torrc /etc/tor/torrc

# Criar usuário e grupos antes de definir permissões
RUN groupadd -f -g 1050 tor-access && \
    useradd -r -s /bin/false -u 1050 -g tor-access debian-tor

# Criar diretórios necessários e definir permissões
RUN mkdir -p /var/lib/tor && \
    chown -R debian-tor:tor-access /var/lib/tor && \
    chmod 755 /var/lib/tor && \
    chown debian-tor:tor-access /etc/tor/torrc && \
    chmod 644 /etc/tor/torrc

# Criar script de inicialização
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Garantir que o diretório existe\n\
mkdir -p /var/lib/tor\n\
\n\
# Se estivermos rodando como root (para lidar com volumes)\n\
if [ "$(id -u)" = "0" ]; then\n\
    # Corrigir permissões do volume se necessário\n\
    chown -R debian-tor:tor-access /var/lib/tor\n\
    chmod 755 /var/lib/tor\n\
    # Executar como usuário debian-tor\n\
    exec runuser -u debian-tor -- /usr/local/bin/tor -f /etc/tor/torrc\n\
else\n\
    # Já estamos rodando como debian-tor\n\
    exec /usr/local/bin/tor -f /etc/tor/torrc\n\
fi' > /usr/local/bin/start-tor.sh && \
    chmod +x /usr/local/bin/start-tor.sh

# Expor portas
EXPOSE 9050 9051

# Comando para iniciar Tor (rodamos como root para lidar com volumes)
CMD ["/usr/local/bin/start-tor.sh"]