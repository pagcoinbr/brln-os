# PeerSwap Web UI Dockerfile
FROM golang:1.22.2-alpine AS builder

# Install dependencies
RUN apk add --no-cache \
    git \
    make \
    gcc \
    musl-dev

# Set working directory
WORKDIR /app

# Copy and extract peerswap-web source
COPY ./psweb/peerswap-web-1.7.8.tar.gz /tmp/
RUN tar -xzf /tmp/peerswap-web-1.7.8.tar.gz -C /app --strip-components=1

# Build peerswap-web
RUN make install-lnd

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    curl \
    netcat-openbsd

# Create user for running the application
RUN adduser -D -s /bin/sh psweb

# Create necessary directories
RUN mkdir -p /home/psweb/.peerswap

# Define as permissões do diretório
RUN chown -R psweb:psweb /home/psweb/.peerswap \
    && chmod 700 /home/psweb/.peerswap

# Copy binary from builder
COPY --from=builder /go/bin/psweb /usr/local/bin/psweb

# Copy configuration example
COPY ./psweb/pswebconfig.json.example /home/psweb/.peerswap/pswebconfig.json

# Copy entrypoint script
COPY ./psweb/entrypoint.sh /usr/local/bin/entrypoint.sh

# Set proper permissions
RUN chown -R psweb:psweb /home/psweb
RUN chmod +x /usr/local/bin/psweb
RUN chmod +x /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER psweb

# Set working directory
WORKDIR /home/psweb

# Expose port
EXPOSE 1984

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:1984/health || exit 1

# Start psweb
CMD ["/usr/local/bin/entrypoint.sh"]