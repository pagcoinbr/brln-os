# Dockerfile para ThunderHub baseado no script BRLN
FROM node:18-bullseye-slim

# Variáveis de ambiente
ENV DEBIAN_FRONTEND=noninteractive
ENV VERSION_THUB=0.13.31
ENV USER=thunderhub
ENV HOME=/home/${USER}
ENV DATA_DIR=/data/thunderhub
ENV THUNDERHUB_PORT=3000

# Instalar dependências básicas
RUN apt-get update && apt-get install -y \
    curl \
    git \
    gnupg \
    build-essential \
    python3 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário thunderhub
RUN useradd -m -s /bin/bash ${USER} && \
    mkdir -p ${DATA_DIR} && \
    chown -R ${USER}:${USER} ${DATA_DIR}

# Mudar para o usuário thunderhub
USER ${USER}
WORKDIR ${HOME}

# Importar chave GPG do desenvolvedor como usuário thunderhub
RUN curl https://github.com/apotdevin.gpg | gpg --import

# Clonar e verificar o ThunderHub
RUN git clone --branch v${VERSION_THUB} https://github.com/apotdevin/thunderhub.git && cd thunderhub && \
    git verify-commit v${VERSION_THUB}

# Instalar dependências e fazer build
WORKDIR ${HOME}/thunderhub
RUN npm install && \
    npm run build

# Criar diretórios necessários
RUN mkdir -p ${DATA_DIR}/config && \
    mkdir -p ${DATA_DIR}/logs && \
    chown -R ${USER}:${USER} ${DATA_DIR}

# Copiar entrypoint
COPY --chown=${USER}:${USER} ./thunderhub/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

#copia o thubConfig
COPY --chown=${USER}:${USER} ./thunderhub/thubConfig.yaml.example thunderhub/thubConfig.yaml

# Expor porta
EXPOSE ${THUNDERHUB_PORT}

# Volumes
VOLUME ["${DATA_DIR}"]

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
  CMD curl -f http://localhost:${THUNDERHUB_PORT} || exit 1

# Entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]