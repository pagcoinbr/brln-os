#!/bin/bash

# Script de entrada para o LNbits
# Configura host e port para aceitar conex√µes externas

set -e

echo "üöÄ Iniciando LNbits..."
echo "üìç Host: 0.0.0.0"
echo "üîå Port: 5000"
echo "üìÇ Diret√≥rio da aplica√ß√£o: $(pwd)"

# Define o diret√≥rio de dados
DATA_DIR="${LNBITS_DATA_FOLDER:-/data/lnbits}"
echo "üìÅ Diret√≥rio de dados: ${DATA_DIR}"

# Verifica e cria o diret√≥rio de dados se n√£o existir
if [ ! -d "${DATA_DIR}" ]; then
    echo "üìÇ Criando diret√≥rio de dados: ${DATA_DIR}"
    mkdir -p "${DATA_DIR}"
fi

# Verifica as permiss√µes do diret√≥rio de dados
echo "üîç Verificando permiss√µes do diret√≥rio de dados..."
if [ ! -w "${DATA_DIR}" ]; then
    echo "‚ö†Ô∏è  Diret√≥rio de dados n√£o tem permiss√£o de escrita"
    echo "üë§ Usu√°rio atual: $(whoami) (UID: $(id -u))"
    echo "üìÇ Permiss√µes do diret√≥rio ${DATA_DIR}:"
    ls -ld "${DATA_DIR}" || echo "‚ùå N√£o foi poss√≠vel verificar permiss√µes"
    
    # Tenta ajustar permiss√µes se poss√≠vel
    echo "üîß Tentando ajustar permiss√µes..."
    chmod 755 "${DATA_DIR}" 2>/dev/null || echo "‚ö†Ô∏è  N√£o foi poss√≠vel alterar permiss√µes do diret√≥rio"
    
    # Verifica novamente
    if [ ! -w "${DATA_DIR}" ]; then
        echo "‚ùå Ainda n√£o √© poss√≠vel escrever no diret√≥rio de dados"
        echo "üí° Dica: Verifique se o volume est√° montado com as permiss√µes corretas"
        echo "üí° Execute no host: sudo chown -R 1004:1004 <caminho_host_do_volume>"
        echo "üí° Ou: docker exec -it --user root <container_name> chown -R lnbits:lnbits /data/lnbits"
    fi
else
    echo "‚úÖ Diret√≥rio de dados tem permiss√£o de escrita"
fi
echo "üìÑ Verificando arquivos importantes:"
ls -la pyproject.toml || echo "‚ùå pyproject.toml n√£o encontrado"
ls -la poetry.lock || echo "‚ùå poetry.lock n√£o encontrado"
echo "üîç Conte√∫do do diret√≥rio atual:"
ls -la .

# Verificar e preparar arquivo de autentica√ß√£o
AUTH_KEY_FILE="${DATA_DIR}/.lnbits_auth_key"
echo "üîê Verificando arquivo de autentica√ß√£o: ${AUTH_KEY_FILE}"
if [ ! -f "${AUTH_KEY_FILE}" ]; then
    echo "üìù Arquivo de autentica√ß√£o n√£o existe, ser√° criado pelo LNbits"
else
    echo "‚úÖ Arquivo de autentica√ß√£o j√° existe"
    ls -la "${AUTH_KEY_FILE}"
fi

# Verificar se podemos criar arquivos no diret√≥rio de dados
echo "üß™ Testando cria√ß√£o de arquivo no diret√≥rio de dados..."
TEST_FILE="${DATA_DIR}/.test_write"
if touch "${TEST_FILE}" 2>/dev/null; then
    echo "‚úÖ Teste de escrita bem-sucedido"
    rm -f "${TEST_FILE}"
else
    echo "‚ùå Falha no teste de escrita"
    echo "üí° O LNbits pode falhar ao tentar criar arquivos de configura√ß√£o"
fi

# Verificar se poetry est√° dispon√≠vel
if command -v poetry &> /dev/null; then
    echo "‚úÖ Poetry encontrado"
    exec poetry run lnbits --host 0.0.0.0 --port 5000
elif command -v uvicorn &> /dev/null; then
    echo "‚úÖ Uvicorn encontrado, iniciando diretamente"
    export PYTHONPATH=/app/lnbits:$PYTHONPATH
    exec uvicorn lnbits.app:app --host 0.0.0.0 --port 5000
else
    echo "‚ùå Nem Poetry nem Uvicorn encontrados"
    echo "Tentando executar com python direto..."
    export PYTHONPATH=/app/lnbits:$PYTHONPATH
    cd /app/lnbits
    exec python -m lnbits
fi

