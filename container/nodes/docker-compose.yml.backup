version: "3.9"

networks:
  core:
    driver: bridge
    internal: true
  edge:
    driver: bridge   # use com parcimônia; só exponha o que precisar

volumes:
  tor_data:
  bitcoin_data:
  lnd_data:
  # elements_data:  # Using host directory instead
  # postgres_data:  # Comentado - usando LND com BoltDB

configs:
  bitcoin_conf:
    file: ./bitcoin/bitcoin.conf
  bitcoin_i2pd_conf:
    file: ./bitcoin/i2pd.conf
  elements_conf:
    file: ./elements/elements.conf
  lnd_conf:
    file: ./lnd/lnd.conf
  lnd_password:
    file: ./lnd/password.txt

services:
  tor:
    image: pagcoin/brln-tor:latest
    container_name: tor
    restart: unless-stopped
    networks: [core]
    volumes:
      - tor_data:/var/lib/tor
      # Diretório compartilhado para .cookie visível aos demais containers
      - tor_data:/run/tor
    # Sem portas para fora; tudo interno via core
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  bitcoind:
    image: pagcoin/brln-bitcoin:latest
    container_name: bitcoind
    restart: unless-stopped
    depends_on: [tor]
    networks: [core, edge]   # edge para o "IP2/Clearnet" interno à LAN/VPN
    configs:
      - source: bitcoin_conf
        target: /home/bitcoin/.bitcoin/bitcoin.conf
        mode: 0644
      - source: bitcoin_i2pd_conf
        target: /home/bitcoin/.bitcoin/i2pd.conf
        mode: 0644
    volumes:
      - bitcoin_data:/home/bitcoin/.bitcoin
      - tor_data:/run/tor:ro
    environment:
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-mainnet}
      - BITCOIN_RPC_USER=${BITCOIN_RPC_USER:-}
      - BITCOIN_RPC_PASSWORD=${BITCOIN_RPC_PASSWORD:-}
      - BITCOIN_EXTRA_ARGS=-listen=1 -txindex=1 -printtoconsole=1 -fallbackfee=0.0002 -server=1 -rpcallowip=0.0.0.0/0 -zmqpubrawblock=tcp://0.0.0.0:28332 -zmqpubrawtx=tcp://0.0.0.0:28333
      - USE_TOR_COOKIE=1
    ports:
      - "${BITCOIN_RPC_PORT:-8332}:8332"   # só exponha se realmente precisar no host
      - "${BITCOIN_ZMQ_BLOCK:-28332}:28332"
      - "${BITCOIN_ZMQ_TX:-28333}:28333"
    # O arquivo .cookie ficará em /home/bitcoin/.bitcoin/.cookie
    user: "${BITCOIN_UID:-1007}:${BITCOIN_GID:-1007}"  # bitcoin user
    tmpfs:
      - /tmp/bitcoin-cookies:noexec,nosuid,size=10m
    healthcheck:
      test: ["CMD", "bitcoin-cli", "-datadir=/home/bitcoin/.bitcoin", "getblockchaininfo"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  elementsd:
    image: pagcoin/elements:latest
    container_name: elementsd
    restart: unless-stopped
    depends_on: [tor]
    networks: [core]
    # Let container create its own config - no mounted config file
    volumes:
      - /data/elements:/home/elements/.elements
      - tor_data:/run/tor:ro
    environment:
      - ELEMENTS_NETWORK=${ELEMENTS_NETWORK:-liquidv1}
      - ELEMENTS_EXTRA_ARGS=-txindex=1 -server=1 -printtoconsole=1
      - USE_TOR_COOKIE=1
      # All configuration done via config file - no environment variables
    ports:
      - "7041:7041"   # Elements RPC port
    # .cookie em /home/elements/.elements/.cookie
    user: "${ELEMENTS_UID:-1001}:${ELEMENTS_GID:-1001}"  # elements user
    tmpfs:
      - /tmp/elements-cookies:noexec,nosuid,size=10m
    healthcheck:
      test: ["CMD", "elements-cli", "-datadir=/home/elements/.elements", "getblockchaininfo"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 180s

  lnd:
    image: pagcoin/brln-lnd:latest
    container_name: lnd
    restart: unless-stopped
    depends_on: [bitcoind, tor]
    networks: [core]
    stop_grace_period: 2m
    configs:
      - source: lnd_conf
        target: /home/lnd/.lnd/lnd.conf
        mode: 0644
      - source: lnd_password
        target: /home/lnd/.lnd/password.txt
        mode: 0600
    volumes:
      # Dados do LND persistidos no host - será criado automaticamente
      - lnd_data:/home/lnd/.lnd
      # Acesso somente leitura aos cookies do bitcoind
      - bitcoin_data:/home/bitcoin/.bitcoin:ro
      - tor_data:/run/tor:ro
    environment:
      - LND_EXTRA_ARGS=--alias=${LND_ALIAS:-BRLN} --listen=0.0.0.0:9735 --rpclisten=0.0.0.0:10009 --bitcoin.active --bitcoin.node=bitcoind --bitcoind.rpchost=bitcoind:8332 --bitcoind.zmqpubrawblock=tcp://bitcoind:28332 --bitcoind.zmqpubrawtx=tcp://bitcoind:28333 --bitcoind.dir=/home/bitcoin/.bitcoin --tlsextraip=lnd --tlsextradomain=lnd
      - USE_BITCOIN_COOKIE=1
    ports:
      # exponha a porta p2p somente se precisar receber canais do exterior
      - "${LND_P2P_PORT:-9735}:9735"
      # RPC normalmente fica apenas na rede interna
    # TLS e macaroons ficam em volumes compartilhados
    user: "${LND_UID:-1008}:${LND_GID:-1008}"  # lnd user
    tmpfs:
      - /tmp/lnd-temp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "lncli", "--rpcserver=localhost:10009", "getinfo"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s

  # PostgreSQL comentado - usando LND com BoltDB padrão
  # postgres:
  #   image: postgres:16
  #   container_name: postgres
  #   restart: unless-stopped
  #   networks: [core]
  #   environment:
  #     - POSTGRES_DB=${LNDG_DB_NAME:-lndg}
  #     - POSTGRES_USER=${LNDG_DB_USER:-lndg}
  #     - POSTGRES_PASSWORD=${LNDG_DB_PASS:?setme}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   tmpfs:
  #     - /tmp:noexec,nosuid,size=200m
  #     - /run:noexec,nosuid,size=100m
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${LNDG_DB_USER:-lndg} -d ${LNDG_DB_NAME:-lndg}"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 5

  # Serviços opcionais que requerem imagens customizadas
  # Descomente e ajuste conforme necessário

  # lndg:
  #   image: yourrepo/lndg:latest
  #   container_name: lndg
  #   restart: unless-stopped
  #   depends_on: [lnd, postgres]
  #   networks: [core]
  #   environment:
  #     - DATABASE_URL=postgresql://${LNDG_DB_USER:-lndg}:${LNDG_DB_PASS:?setme}@postgres:5432/${LNDG_DB_NAME:-lndg}
  #     - LND_GRPC_HOST=lnd:10009
  #   volumes:
  #     - lnd_tls:/lnd/tls:ro     # acesso aos certificados TLS
  #     - lnd_macaroons:/lnd/macaroons:ro     # acesso aos macaroons

  # thunderhub:
  #   image: apotdevin/thunderhub:latest
  #   container_name: thunderhub
  #   restart: unless-stopped
  #   depends_on: [lnd]
  #   networks: [core, edge]  # edge se quiser acessar via browser fora do host
  #   environment:
  #     - TH_CONFIG=/app/thub.config.yaml
  #   ports:
  #     - "${TH_PORT:-3020}:3000"
  #   volumes:
  #     - lnd_tls:/lnd/tls:ro
  #     - lnd_macaroons:/lnd/macaroons:ro
  #     - ./configs/thub.config.yaml:/app/thub.config.yaml:ro

  bos:
    image: pagcoin/brln-bos:latest
    container_name: bos
    restart: unless-stopped
    depends_on: [lnd]
    networks: [core]
    environment:
      - NODE_ENV=production
      - HOME=/home/bos
      - NPM_CONFIG_PREFIX=/home/bos/.npm-global
      - PATH=/home/bos/.npm-global/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    volumes:
      - lnd_data:/home/bos/.lnd:ro  # acesso read-only aos dados do LND
      - ./bos/configure-bos.sh:/home/bos/configure-bos.sh:ro
    user: "${BOS_UID:-1009}:${BOS_GID:-1009}"  # bos user
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # peerswap:
  #   image: yourrepo/peerswap:latest
  #   container_name: peerswap
  #   restart: unless-stopped
  #   depends_on: [lnd, elementsd, bitcoind, tor]
  #   networks: [core]
  #   environment:
  #     - LND_GRPC=lnd:10009
  #     - BITCOIND_RPC=bitcoind:8332
  #     - ELEMENTSD_RPC=elementsd:7041
  #     - USE_BITCOIN_COOKIE=1
  #     - USE_ELEMENTS_COOKIE=1
  #   volumes:
  #     - lnd_tls:/home/lnd/.lnd/tls:ro
  #     - lnd_macaroons:/home/lnd/.lnd/macaroons:ro
  #     - bitcoin_data:/home/bitcoin/.bitcoin:ro
  #     - elements_data:/home/elements/.elements:ro
  #     - tor_data:/run/tor:ro

  # psweb:
  #   image: yourrepo/psweb:latest
  #   container_name: psweb
  #   restart: unless-stopped
  #   depends_on: [peerswap]
  #   networks: [core, edge]
  #   environment:
  #     - PEERSWAP_API=http://peerswap:8080
  #   ports:
  #     - "${PSWEB_PORT:-8088}:8080"

  # Endpoint "IP2" opcional – pode ser um proxy reverso/Caddy/Nginx para expor HTTPs
  # ip2:
  #   image: caddy:2
  #   container_name: ip2
  #   restart: unless-stopped
  #   depends_on: [thunderhub, psweb]
  #   networks: [core, edge]
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile:ro
  #     - ./certs:/data/caddy
